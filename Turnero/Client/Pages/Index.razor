@page "/"
@using Turnero.Client.Models;
@using Radzen;
@using Turnero.Shared.DTO_Back.Peluquero;

@inject PeluqueroService PeluqueroService;

<PageTitle>Index</PageTitle>


<RadzenTemplateForm Data="@ModelTurno">

    <div class="row d-flex justify-content-center align-items-center  widthPerson">

        <div class="col-md-6">
             <RadzenCard>

                 <div>

                     <h4 class="mb-4">Elija fecha y hora del corte.</h4>
                     <RadzenDatePicker TValue="DateTime?"
                         ShowTime="true"
                         HourFormat="12" DateFormat="dd/MM/yyyy h:mm tt" Class="w-50" 
                         Min="DateTime.Now.AddDays(-1)" 
                         Change=@(args => changeCalendar(args))
                     />
                         @*HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Class="w-50" *@

                 </div>

                 <br/>

                 <div>

                     <div style="display: flex; align-items: center; margin-bottom: 16px">

                        <RadzenButton Click="@GetAllPeluqueros" Text="Obtener peluqueros" />

                     </div>

                     <RadzenDataGrid AllowFiltering="false"
                          FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                          AllowPaging="true" PageSize="3"
                          AllowSorting="true" Data="@Peluqueros" TItem="PeluqueroData" ColumnWidth="50px"
                          SelectionMode="DataGridSelectionMode.Single" @bind-Value=@PeluqueroSeleccionado
                     >
                          <Columns>
                            <RadzenDataGridColumn TItem="PeluqueroData" Property="Nombre" Title="Nombre y Apellido" Sortable="false" Filterable="false">
                                  <Template Context="data">
                                      <RadzenImage Path="@data.ImagenPerfil"
                                                  style="width: 50px; height: 50px; border-radius: 8px; margin-right: 8px;" />
                                      @data.Nombre @data.Apellido
                                  </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn TItem="PeluqueroData" Property="DNI" Title="D.N.I" />

                          </Columns>
                     </RadzenDataGrid>

                     <br/>

                    @if (PeluqueroSeleccionado?.Any() == true)
                    {
                         <div class="row" >
                              <div class="col-md-6 m-auto">

                                   <RadzenCard class="m-1">
                                       <h3 class="h5">Peluquero seleccionado</h3>
                                       <div class="d-flex flex-row">
                                           @*<RadzenImage Path="https://img.blogs.es/anexom/wp-content/uploads/2018/12/42707058715_61bbdc578f_k.jpg" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />*@
                                           <RadzenImage Path="@PeluqueroSeleccionado?[0].ImagenPerfil" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                                           <div>
                                               <div>Nombre y Apellido</div>
                                               <b>@PeluqueroSeleccionado?[0].Nombre @PeluqueroSeleccionado?[0].Apellido</b>
                                               <div class="mt-3">Puesto</div>
                                               <b>Peluquero</b>
                                           </div>
                                       </div>
                                   </RadzenCard>

                              </div>
                         </div>
                    }
                 </div>

                <div class="row d-flex my-3">

                    <RadzenButton Text="Realizar consulta"
                        class="justify-content-center"
                        ButtonStyle="ButtonStyle.Primary"
                     />

                </div>

             </RadzenCard>
        </div>



    </div>
                  
</RadzenTemplateForm>


@code {
    #region VARIABLES

    public List<PeluqueroData> Peluqueros = null;
    public IList<PeluqueroData> PeluqueroSeleccionado = null;

    ///  CALENDARIO
    public ModeloPrueba ModelTurno = new ModeloPrueba
    {
        HorarioCorte = DateTime.Now
    };





    #endregion


    private async Task GetAllPeluqueros()
    {

        try
        {
            var (ListaPeluqueros, MessageError) = await this.PeluqueroService.GetAll();

            if (ListaPeluqueros == null || MessageError != null)
            {
                throw new Exception(MessageError);
            }

            Peluqueros = ListaPeluqueros;
        }
        catch (Exception ex)
        {
            // Mostrar mensaje $"Uups... Ha ocurrido un error: {ex.Message}"
            //storeGlobal.SetMessageModal(ex.Message);
            //storeGlobal.SetShowMessageModal(true);
        }
        finally
        {
            //storeGlobal.SetShowLoader(false);
            //store.ResetFormLogin();

            //var timer = new PeriodicTimer(TimeSpan.FromSeconds(3));
            //Task.Run(async () =>
            //{
            //    await Task.Delay(4000);
            //    timer.Dispose();
            //});

            //while (await timer.WaitForNextTickAsync())
            //{
            //    storeGlobal.SetShowMessageModal(false);
            //}
        }
    }



    /* Calendario */

    private void changeCalendar(DateTime value)
    {
        ModelTurno.HorarioCorte = value;
    }

    /* Calendario */



}

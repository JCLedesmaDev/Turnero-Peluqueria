@page "/"
@using Turnero.Client.Models;
@using Radzen;

<PageTitle>Index</PageTitle>


<RadzenTemplateForm Data="@ModelTurno">

    <div class="row d-flex justify-content-center align-items-center  widthPerson">

        <div class="col-md-6">
             <RadzenCard>

                 <div>

                     <h4 class="mb-4">Elija fecha y hora del corte.</h4>
                     <RadzenDatePicker TValue="DateTime?"
                         ShowTime="true"
                         Change=@(args => OnChange(args, "DatePicker with 12 hour time format", "MM/dd/yyyy h:mm tt"))
                         HourFormat="12" DateFormat="MM/dd/yyyy h:mm tt" Class="w-50" 
                         Min="DateTime.Now" 
                     />

                 </div>

                 <br/>

                 <div>

                     <div style="display: flex; align-items: center; margin-bottom: 16px">

                         <RadzenButton Click="@ClearSelection" Text="Clear Selection" />
@*
                         @if (selectedEmployees?.Any() == true)
                         {
                             <div style="margin-left: 16px">
                                 Selected Employee: @selectedEmployees[0].FirstName @selectedEmployees[0].LastName
                             </div>
                         }*@
                     </div>

                     <RadzenDataGrid AllowFiltering="false"
                                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                AllowPaging="true" PageSize="3"
                                                AllowSorting="true" Data="@employees" TItem="Peluquero" ColumnWidth="50px"
                                                SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedEmployees
                                >
                                    <Columns>
                                        <RadzenDataGridColumn TItem="Peluquero" Property="Photo" Title="Peluquero" Sortable="false" Filterable="false">
                                            <Template Context="data">
                                                @*<RadzenImage Path="@data.Photo" *@
                                                <RadzenImage Path="https://img.blogs.es/anexom/wp-content/uploads/2018/12/42707058715_61bbdc578f_k.jpg"
                                                             style="width: 50px; height: 50px; border-radius: 8px; margin-right: 8px;" />
                                                @data.FirstName @data.LastName
                                            </Template>
                                        </RadzenDataGridColumn>

                                        <RadzenDataGridColumn TItem="Peluquero" Property="Title" Title="Title" />

                                    </Columns>
                                </RadzenDataGrid>

                     <div class="row ">
                        <div class="col-md-6 m-auto">

                             <RadzenCard class="m-1">
                                 <h3 class="h5">Peluquero seleccionado</h3>
                                 <div class="d-flex flex-row">
                                     <RadzenImage Path="https://img.blogs.es/anexom/wp-content/uploads/2018/12/42707058715_61bbdc578f_k.jpg" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                                     <div>
                                         <div>Employee</div>
                                         <b>Juan Cruz Ledesma</b>
                                         <div class="mt-3">Company</div>
                                         <b>Peluquero</b>
                                     </div>
                                 </div>
                             </RadzenCard>

                        </div>
                     </div>
                 </div>

                <div class="row d-flex my-3">

                    <RadzenButton Text="Realizar consulta"
                        class="justify-content-center"
                        ButtonStyle="ButtonStyle.Primary"
                       Click=@(() => OnChange(DateTime.Now, "DatePicker with 12 hour time format", "MM/dd/yyyy h:mm tt"))
                    />

                </div>

             </RadzenCard>
        </div>



    </div>
                  
</RadzenTemplateForm>






@code {
    #region VARIABLES

    ///  CALENDARIO
    public ModeloPrueba ModelTurno = new ModeloPrueba
    {
        HorarioCorte = DateTime.Now
    };


    /// SELECT
    //public class ModeloSelect
    //{
    //    public string CustomerID { get; set; }
    //    public string CompanyName { get; set; }
    //}

    //public List<ModeloSelect> DatosSelect = new List<ModeloSelect>
    //{
    //    new ModeloSelect
    //    {
    //        CustomerID = "12",
    //        CompanyName = "LALALAA",
    //    },
    //    new ModeloSelect
    //    {
    //        CustomerID = "1",
    //        CompanyName = "Eduardo",
    //    },
    //    new ModeloSelect
    //    {
    //        CustomerID = "3",
    //        CompanyName = "Adolfo",
    //    },
    //};
    //string value = "ALFKI";

    #endregion

    /* Calendario */

    private void OnChange(DateTime? value, string name, string format)
    {
        Console.WriteLine($"{name} value changed to {value?.ToString(format)}");
        Console.Write("AAAAA " + ModelTurno.HorarioCorte);
    }

    /* Calendario */



    /* SELECT PELUQUERO */

    //private void OnChangeSelect(object value, string name)
    //{
    //    var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

    //    Console.Write($"{name} value changed to {str}");
    //}

    /* SELECT PELUQUERO */




    //https://blazor.radzen.com/datepicker

    //https://www.youtube.com/watch?v=IpdqFj8t6z4&t=932s

    public class Peluquero
    {
        public string Photo { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Title { get; set; }
        public string EmployeeID { get; set; }
        public string HireDate { get; set; }
        public string City { get; set; }
        public string Country { get; set; }
    }


    public List<Peluquero> employees;
    public IList<Peluquero> selectedEmployees;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        employees = new List<Peluquero>
        {
            new Peluquero
            {
                Photo = "",
                FirstName = "AAAAA",
                LastName = "AAAAA",
                Title = "5ASDQ44",
                EmployeeID = "65445",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
            },
            new Peluquero
            {
                FirstName = "BBBBB",
                LastName = "BBBBB",
                Title = "asdasd",
                EmployeeID = "5678",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
            new Peluquero
            {
                FirstName = "CCCC",
                LastName = "CCCC",
                Title = "asdasd",
                EmployeeID = "087",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
                        new Peluquero
            {
                Photo = "",
                FirstName = "AAAAA",
                LastName = "AAAAA",
                Title = "asdasd",
                EmployeeID = "88",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
            },
            new Peluquero
            {
                FirstName = "BBBBB",
                LastName = "BBBBB",
                Title = "asdasd",
                EmployeeID = "6",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
            new Peluquero
            {
                FirstName = "CCCC",
                LastName = "CCCC",
                Title = "asdasd",
                EmployeeID = "543",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
                        new Peluquero
            {
                Photo = "",
                FirstName = "AAAAA",
                LastName = "AAAAA",
                Title = "asdasd",
                EmployeeID = "123",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
            },
            new Peluquero
            {
                FirstName = "BBBBB",
                LastName = "BBBBB",
                Title = "asdasd",
                EmployeeID = "23",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
            new Peluquero
            {
                FirstName = "CCCC",
                LastName = "CCCC",
                Title = "asdasd",
                EmployeeID = "3",
                HireDate = "asdasd",
                City = "asdasd",
                Country = "asdasd",
                Photo = "",
            },
        };
        selectedEmployees = employees.Take(1).ToList();
    }

    private void ClearSelection()
    {
        selectedEmployees = null;
    }


}
